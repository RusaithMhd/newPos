{/* Hidden Print Content */}
<div className="hidden">
    <div ref={printRef} className="print-container">
        {/* Header */}
        <div className="bill-header text-center">
            <div className="shop-name font-bold text-xl uppercase">MUNSI TEX</div>
            <div className="shop-address text-sm">MOSQUE BUILDING, POLICE ROAD</div>
            <div className="shop-contact text-sm">Mob: 0769859513</div>
            <hr className="border-t border-black my-1" />
        </div>

        {/* Bill Info */}
        <div className="bill-info grid grid-cols-2 gap-2 text-xs mt-2">
            <div><strong>Bill No:</strong> {billNumber}</div>
            <div><strong>Date:</strong> {new Date().toLocaleDateString()}</div>
            <div><strong>Customer:</strong> {selectedCustomer?.name || "Walk-in Customer"}</div>
            <div><strong>Cashier:</strong> Admin</div>
            <div><strong>Payment:</strong> {paymentType}</div>
            <div>
                <strong>Time:</strong> {new Date().toLocaleTimeString("en-IN", {
                hour: "2-digit", minute: "2-digit", second: "2-digit", hour12: true
                })}
            </div>
        </div>

        {/* Items Table */}
        <table className="bill-table w-full border-collapse mt-2">
            <thead>
                <tr className="bg-gray-100">
                    <th className="border border-black px-2 py-1 text-left">S.No</th>
                    <th className="border border-black px-2 py-1 text-left">Name</th>
                    <th className="border border-black px-2 py-1 text-center">Qty</th>
                    <th className="border border-black px-2 py-1 text-right">MRP</th>
                    <th className="border border-black px-2 py-1 text-right">U.Price</th>
                    <th className="border border-black px-2 py-1 text-right">U.Dis</th>
                    <th className="border border-black px-2 py-1 text-right">Total</th>
                </tr>
            </thead>
            <tbody>
                {initialProducts.map((product, index) => (
                <React.Fragment key={index}>
                    {/* Item Name Row */}
                    <tr className="tr-name">
                        <td className="border border-black px-2 py-1 text-left">{index + 1}</td>
                        <td className="border border-black px-2 py-1 text-left font-bold" colSpan="6">
                            {product.product_name}</td>
                    </tr>
                    {/* Item Details Row */}
                    <tr className="tr-details">
                        <td className="border border-black px-2 py-1 text-left"></td>
                        <td className="border border-black px-2 py-1 text-left"></td>
                        <td className="border border-black px-2 py-1 text-center">{product.qty}</td>
                        <td className="border border-black px-2 py-1 text-right">{product.mrp}</td>
                        <td className="border border-black px--2 py-1 text-right">{product.sales_price}</td>
                        <td className="border border-black px-2 py-1 text-right">{product.discount}</td>
                        <td className="border border-black px-2 py-1 text-right font-bold">
                            {((product.mrp - product.discount) * product.qty)}
                        </td>
                    </tr>
                </React.Fragment>
                ))}
            </tbody>
        </table>

        {/* Summary Section */}
        <div className="bill-summary text-right text-sm mt-2">
            <p><strong>Subtotal:</strong> {formatCurrency(grandTotal + initialBillDiscount)}</p>
            <p><strong>Discount:</strong> {formatCurrency(totalItemDiscount + initialBillDiscount)}</p>
            <p className="font-bold text-lg"><strong>Grand Total:</strong> {formatCurrency(grandTotal)}</p>
            <p><strong>Received:</strong> {formatCurrency(receivedAmount)}</p>
            <p><strong>Balance:</strong> {formatCurrency(balanceAmount)}</p>
        </div>

        {/* Terms & Conditions */}
        <div className="terms-conditions text-left text-xs mt-2">
            <h4 className="font-bold text-center">Terms and Conditions</h4>
            <p>
                - Goods once sold cannot be returned. <br />
                - Please keep the bill for future reference. <br />
                - Exchange is allowed within 7 days with original bill. <br />
                - No refunds, only exchange for unused items. <br />
            </p>
        </div>

        {/* Thank You Message */}
        <p className="thanks text-center font-semibold mt-2">Thank You! Visit Again.</p>

        {/* Branding */}
        <p className="systemby">System by IMSS</p>
        <p className="systemby-web ">visitðŸ”—: www.imss.lk</p>
    </div>
</div>

{/* Save Button */}
<div className="flex justify-end gap-4 mt-4">
    <button id="saveButton" onClick={()=> setShowConfirmation(true)}
        className="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-700"
        >
        Save
    </button>
</div>

{/* Confirmation Modal */}
{showConfirmation && (
<div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
    <div className="bg-white p-6 rounded-lg shadow-lg">
        <p className="text-lg font-bold">Do you want to print the bill?</p>
        <div className="flex justify-end gap-4 mt-4">
            <button onClick={handleConfirmSave}
                className="bg-gray-500 text-white px-4 py-2 rounded-md hover:bg-gray-700">No, Just Save</button>
            <button onClick={handleConfirmPrint}
                className="bg-green-500 text-white px-4 py-2 rounded-md hover:bg-green-700">Yes, Print</button>
        </div>
    </div>
</div>
)}

{/* Success Message */}
{showSuccessMessage && (
<div className="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50">
    <div className="bg-white p-6 rounded-lg shadow-lg">
        <p className="text-lg font-bold">Bill saved successfully!</p>
    </div>
</div>
)}
</div>
</div>